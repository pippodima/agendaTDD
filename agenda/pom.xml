<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>dimartinofilippo</groupId>
	<artifactId>agenda</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>agenda</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>17</maven.compiler.release>

		<mockito.version>5.7.0</mockito.version>
		<mongo.version>4.11.1</mongo.version>
		<mongo.java.server.version>1.44.0</mongo.java.server.version>
		<assertj.version>3.24.2</assertj.version>
		<testcontainers.version>1.19.3</testcontainers.version>
		<assertj.swing.version>3.17.1</assertj.swing.version>
		<surefire.version>3.2.5</surefire.version>
		<failsafe.version>3.2.5</failsafe.version>
		<picocli.version>4.7.7</picocli.version>
		<jacoco.version>0.8.12</jacoco.version>
		<postgresql.version>42.7.4</postgresql.version>
		<h2.version>2.2.224</h2.version>
		<pitest.version>1.15.0</pitest.version>
		<pitest.junit5.version>1.2.1</pitest.junit5.version>

		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.projectKey>pippodima_agendaTDD</sonar.projectKey>
		<sonar.organization>pippodima-1</sonar.organization>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.coverage.jacoco.xmlReportPaths>
			target/site/jacoco-aggregate/jacoco.xml
</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.coverage.exclusions>
			src/main/java/dimartinofilippo/agenda/model/**,
			src/main/java/dimartinofilippo/agenda/App*.java
</sonar.coverage.exclusions>

		<!-- Disable rule for "Tests should include assertions" -->
		<sonar.issue.ignore.multicriteria>e1</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.e1.ruleKey>java:S2699</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*Test.java</sonar.issue.ignore.multicriteria.e1.resourceKey>


		<jacocoArgLine></jacocoArgLine>
		<jacocoArgLineIT></jacocoArgLineIT>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.11.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- JUnit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- MongoDB Driver -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>${mongo.version}</version>
		</dependency>

		<!-- In-memory MongoDB for testing -->
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo.java.server.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- AssertJ -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- AssertJ Swing -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.swing.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- H2 Database for tests -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- TestContainers -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- PostgreSQL JDBC -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<!-- Picocli -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>

		<!-- logger binder-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.9</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.4.11</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.12.1</version>
				<configuration>
					<release>${maven.compiler.release}</release>
				</configuration>
			</plugin>


			<!-- jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<exclude>dimartinofilippo/agenda/model/**</exclude>
						<exclude>dimartinofilippo/agenda/App*.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<!-- Unit Test Agent -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<!-- Unit Test Report -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>

				</executions>
			</plugin>

			<!-- PIT Mutation Testing -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>${pitest.junit5.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<targetClasses>
						<param>dimartinofilippo.agenda.*</param>
					</targetClasses>
					<targetTests>
						<param>dimartinofilippo.agenda.*Test</param>
					</targetTests>
					<excludedClasses>
						<param>dimartinofilippo.agenda.view.swing.*</param>
						<param>dimartinofilippo.agenda.model.*</param>
						<param>dimartinofilippo.agenda.App*</param>

					</excludedClasses>
					<mutators>
						<mutator>STRONGER</mutator>
					</mutators>

					<timeoutFactor>2</timeoutFactor>
					<timeoutConstant>8000</timeoutConstant>
					<outputFormats>
						<format>HTML</format>
						<format>XML</format>
					</outputFormats>
					<failWhenNoMutations>false</failWhenNoMutations>
				</configuration>
				<executions>
					<execution>
						<id>pitest</id>
						<phase>test</phase>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Maven Surefire Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<argLine>@{argLine} --add-opens
						java.base/java.util=ALL-UNNAMED --add-opens
						java.base/java.lang=ALL-UNNAMED</argLine>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*E2E.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Maven Failsafe Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<configuration>
					<argLine>@{argLine} --add-opens
						java.base/java.util=ALL-UNNAMED --add-opens
						java.base/java.lang=ALL-UNNAMED</argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build Helper Maven Plugin - Add custom source directories -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-e2e-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>dimartinofilippo.agenda.App</mainClass>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>META-INF/MANIFEST.MF</exclude>
										<exclude>META-INF/maven/**</exclude>
										<exclude>META-INF/native-image/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Coverall -->
			<plugin>
				<groupId>com.github.hazendaz.maven</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.7.0</version>
				<configuration>
					<repoToken>${env.COVERALLS_REPO_TOKEN}</repoToken>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>skip-testcontainers</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*Testcontainer*.java</exclude>
							</excludes>
						</configuration>
					</plugin>

					<!-- sonar qube -->
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.11.0.3922</version>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>skip-mongo-it</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/AgendaControllerMongoIT.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jacoco-report</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>merge-results</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>
												${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>
										${project.build.directory}/aggregate.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>aggregate-report</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>
										${project.build.directory}/aggregate.exec</dataFile>
									<outputDirectory>
										${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>pitest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<configuration>
							<withHistory>true</withHistory>
							<exportLineCoverage>true</exportLineCoverage>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>